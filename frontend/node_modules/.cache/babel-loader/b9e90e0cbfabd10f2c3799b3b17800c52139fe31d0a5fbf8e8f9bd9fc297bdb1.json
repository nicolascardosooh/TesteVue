{"ast":null,"code":"import { io } from 'socket.io-client';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:3000/api';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      devices: [],\n      newDevice: {\n        name: '',\n        mac: ''\n      },\n      socket: null,\n      isDark: false\n    };\n  },\n  async mounted() {\n    // Load theme preference\n    const savedTheme = localStorage.getItem('darkTheme');\n    this.isDark = savedTheme ? JSON.parse(savedTheme) : false;\n    this.applyTheme();\n    await this.fetchDevices();\n    this.setupWebSocket();\n  },\n  methods: {\n    async fetchDevices() {\n      try {\n        const response = await axios.get(`${API_URL}/devices`);\n        this.devices = response.data;\n      } catch (error) {\n        console.error('Error fetching devices:', error);\n        this.showNotification('Erro ao carregar dispositivos', 'error');\n      }\n    },\n    async createDevice() {\n      if (!this.newDevice.name.trim() || !this.newDevice.mac.trim()) {\n        this.showNotification('Preencha todos os campos', 'error');\n        return;\n      }\n      try {\n        await axios.post(`${API_URL}/devices`, this.newDevice);\n        this.newDevice = {\n          name: '',\n          mac: ''\n        };\n        this.showNotification('Dispositivo cadastrado com sucesso!', 'success');\n      } catch (error) {\n        const message = error.response?.data?.error || 'Erro ao criar dispositivo';\n        this.showNotification(message, 'error');\n      }\n    },\n    async toggleStatus(deviceId) {\n      try {\n        await axios.patch(`${API_URL}/devices/${deviceId}/status`);\n        this.showNotification('Status alterado com sucesso!', 'success');\n      } catch (error) {\n        console.error('Error toggling status:', error);\n        this.showNotification('Erro ao alterar status', 'error');\n      }\n    },\n    setupWebSocket() {\n      this.socket = io('http://localhost:3000');\n      this.socket.on('connect', () => {\n        console.log('WebSocket connected');\n      });\n      this.socket.on('device:created', device => {\n        this.devices.unshift(device);\n        this.showNotification('Novo dispositivo adicionado!', 'info');\n      });\n      this.socket.on('device:status', device => {\n        const index = this.devices.findIndex(d => d.id === device.id);\n        if (index !== -1) {\n          this.devices.splice(index, 1, device);\n        }\n      });\n    },\n    toggleTheme() {\n      this.isDark = !this.isDark;\n      this.applyTheme();\n      localStorage.setItem('darkTheme', JSON.stringify(this.isDark));\n    },\n    applyTheme() {\n      if (this.isDark) {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n    },\n    showNotification(message, type = 'info') {\n      // Simple notification - you could use a proper notification library here\n      const styles = {\n        success: 'bg-green-500 text-white',\n        error: 'bg-red-500 text-white',\n        info: 'bg-blue-500 text-white'\n      };\n\n      // Create notification element\n      const notification = document.createElement('div');\n      notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg shadow-lg transition-all duration-300 transform translate-x-0 ${styles[type]}`;\n      notification.textContent = message;\n      document.body.appendChild(notification);\n\n      // Remove after 3 seconds\n      setTimeout(() => {\n        notification.style.transform = 'translateX(100%)';\n        setTimeout(() => {\n          if (notification.parentNode) {\n            notification.parentNode.removeChild(notification);\n          }\n        }, 300);\n      }, 3000);\n    }\n  },\n  beforeUnmount() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["io","axios","API_URL","name","data","devices","newDevice","mac","socket","isDark","mounted","savedTheme","localStorage","getItem","JSON","parse","applyTheme","fetchDevices","setupWebSocket","methods","response","get","error","console","showNotification","createDevice","trim","post","message","toggleStatus","deviceId","patch","on","log","device","unshift","index","findIndex","d","id","splice","toggleTheme","setItem","stringify","document","documentElement","classList","add","remove","type","styles","success","info","notification","createElement","className","textContent","body","appendChild","setTimeout","style","transform","parentNode","removeChild","beforeUnmount","disconnect"],"sources":["C:\\Users\\nicolas\\Desktop\\Projetos\\Teste\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\" :class=\"{'dark': isDark}\" class=\"min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors duration-300\">\n    <!-- Header -->\n    <header class=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n      <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between items-center py-6\">\n          <div>\n            <h1 class=\"text-3xl font-bold text-gray-900 dark:text-white\">Gerenciamento de Dispositivos</h1>\n            <p class=\"text-gray-600 dark:text-gray-400 mt-2\">Cadastre e monitore seus dispositivos em tempo real</p>\n          </div>\n     \n        </div>\n      </div>\n    </header>\n\n    <main class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n      <!-- Device Form Card -->\n      <div class=\"bg-white dark:bg-gray-800 rounded-xl shadow-md p-6 mb-8 border border-gray-200 dark:border-gray-700\">\n        <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white mb-6 flex items-center\">\n          <svg class=\"w-5 h-5 mr-2 text-primary-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"></path>\n          </svg>\n          Cadastrar Novo Dispositivo\n        </h2>\n        \n        <form @submit.prevent=\"createDevice\" class=\"space-y-4\">\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label for=\"name\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Nome do Dispositivo\n              </label>\n              <input\n                id=\"name\"\n                v-model=\"newDevice.name\"\n                type=\"text\"\n                required\n                class=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-colors\"\n                placeholder=\"Ex: Notebook João\"\n              />\n            </div>\n            \n            <div>\n              <label for=\"mac\" class=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Endereço MAC\n              </label>\n              <input\n                id=\"mac\"\n                v-model=\"newDevice.mac\"\n                type=\"text\"\n                required\n                class=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-transparent dark:bg-gray-700 dark:text-white transition-colors\"\n                placeholder=\"Ex: 00:1B:44:11:3A:B7\"\n              />\n            </div>\n          </div>\n          \n          <div class=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              class=\"px-6 py-3 bg-primary-500 hover:bg-primary-600 text-white font-medium rounded-lg transition-colors duration-200 flex items-center shadow-lg hover:shadow-xl transform hover:-translate-y-0.5\"\n            >\n              <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 4v16m8-8H4\"></path>\n              </svg>\n              Cadastrar Dispositivo\n            </button>\n          </div>\n        </form>\n      </div>\n\n      <!-- Devices Table Card -->\n      <div class=\"bg-white dark:bg-gray-800 rounded-xl shadow-md overflow-hidden border border-gray-200 dark:border-gray-700\">\n        <div class=\"px-6 py-4 border-b border-gray-200 dark:border-gray-700\">\n          <h2 class=\"text-xl font-semibold text-gray-900 dark:text-white flex items-center\">\n            <svg class=\"w-5 h-5 mr-2 text-primary-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n            </svg>\n            Lista de Dispositivos\n            <span class=\"ml-2 px-2 py-1 text-xs bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded-full\">\n              {{ devices.length }} dispositivo{{ devices.length !== 1 ? 's' : '' }}\n            </span>\n          </h2>\n        </div>\n\n        <div class=\"overflow-x-auto\">\n          <table class=\"w-full\">\n            <thead class=\"bg-gray-50 dark:bg-gray-700\">\n              <tr>\n                <th class=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  ID\n                </th>\n                <th class=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Nome\n                </th>\n                <th class=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Endereço MAC\n                </th>\n                <th class=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Status\n                </th>\n                <th class=\"px-6 py-4 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\n                  Ações\n                </th>\n              </tr>\n            </thead>\n            <tbody class=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              <tr \n                v-for=\"device in devices\" \n                :key=\"device.id\"\n                class=\"hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\n              >\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 dark:text-white\">\n                  #{{ device.id }}\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\n                  {{ device.name }}\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500 dark:text-gray-400 font-mono\">\n                  {{ device.mac }}\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap\">\n                  <span \n                    :class=\"[\n                      'inline-flex items-center px-3 py-1 rounded-full text-xs font-medium',\n                      device.status === 'ATIVO' \n                        ? 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' \n                        : 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'\n                    ]\"\n                  >\n                    <span \n                      :class=\"[\n                        'w-2 h-2 rounded-full mr-2',\n                        device.status === 'ATIVO' ? 'bg-green-500' : 'bg-red-500'\n                      ]\"\n                    ></span>\n                    {{ device.status }}\n                  </span>\n                </td>\n                <td class=\"px-6 py-4 whitespace-nowrap text-sm\">\n                  <button \n                    @click=\"toggleStatus(device.id)\"\n                    :class=\"[\n                      'px-4 py-2 rounded-lg font-medium transition-all duration-200 transform hover:scale-105',\n                      device.status === 'ATIVO'\n                        ? 'bg-red-500 hover:bg-red-600 text-white shadow-lg hover:shadow-red-200 dark:hover:shadow-red-900'\n                        : 'bg-green-500 hover:bg-green-600 text-white shadow-lg hover:shadow-green-200 dark:hover:shadow-green-900'\n                    ]\"\n                  >\n                    {{ device.status === 'ATIVO' ? 'Desativar' : 'Ativar' }}\n                  </button>\n                </td>\n              </tr>\n              \n              <!-- Empty State -->\n              <tr v-if=\"devices.length === 0\">\n                <td colspan=\"5\" class=\"px-6 py-12 text-center\">\n                  <div class=\"text-gray-400 dark:text-gray-500\">\n                    <svg class=\"w-16 h-16 mx-auto mb-4 opacity-50\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1\" d=\"M9 17v-2m3 2v-4m3 4v-6m2 10H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n                    </svg>\n                    <p class=\"text-lg font-medium\">Nenhum dispositivo cadastrado</p>\n                    <p class=\"mt-2\">Comece cadastrando seu primeiro dispositivo acima</p>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n      <!-- Connection Status -->\n      <div class=\"mt-6 flex items-center justify-center text-sm text-gray-500 dark:text-gray-400\">\n        <div class=\"flex items-center\">\n          <div \n            :class=\"[\n              'w-3 h-3 rounded-full mr-2 animate-pulse',\n              socket && socket.connected ? 'bg-green-500' : 'bg-red-500'\n            ]\"\n          ></div>\n          {{ socket && socket.connected ? 'Conectado em tempo real' : 'Desconectado' }}\n        </div>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport { io } from 'socket.io-client';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/api';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      devices: [],\n      newDevice: {\n        name: '',\n        mac: ''\n      },\n      socket: null,\n      isDark: false\n    };\n  },\n  async mounted() {\n    // Load theme preference\n    const savedTheme = localStorage.getItem('darkTheme');\n    this.isDark = savedTheme ? JSON.parse(savedTheme) : false;\n    this.applyTheme();\n    \n    await this.fetchDevices();\n    this.setupWebSocket();\n  },\n  methods: {\n    async fetchDevices() {\n      try {\n        const response = await axios.get(`${API_URL}/devices`);\n        this.devices = response.data;\n      } catch (error) {\n        console.error('Error fetching devices:', error);\n        this.showNotification('Erro ao carregar dispositivos', 'error');\n      }\n    },\n    \n    async createDevice() {\n      if (!this.newDevice.name.trim() || !this.newDevice.mac.trim()) {\n        this.showNotification('Preencha todos os campos', 'error');\n        return;\n      }\n\n      try {\n        await axios.post(`${API_URL}/devices`, this.newDevice);\n        this.newDevice = { name: '', mac: '' };\n        this.showNotification('Dispositivo cadastrado com sucesso!', 'success');\n      } catch (error) {\n        const message = error.response?.data?.error || 'Erro ao criar dispositivo';\n        this.showNotification(message, 'error');\n      }\n    },\n    \n    async toggleStatus(deviceId) {\n      try {\n        await axios.patch(`${API_URL}/devices/${deviceId}/status`);\n        this.showNotification('Status alterado com sucesso!', 'success');\n      } catch (error) {\n        console.error('Error toggling status:', error);\n        this.showNotification('Erro ao alterar status', 'error');\n      }\n    },\n    \n    setupWebSocket() {\n      this.socket = io('http://localhost:3000');\n      \n      this.socket.on('connect', () => {\n        console.log('WebSocket connected');\n      });\n      \n      this.socket.on('device:created', (device) => {\n        this.devices.unshift(device);\n        this.showNotification('Novo dispositivo adicionado!', 'info');\n      });\n      \n      this.socket.on('device:status', (device) => {\n        const index = this.devices.findIndex(d => d.id === device.id);\n        if (index !== -1) {\n          this.devices.splice(index, 1, device);\n        }\n      });\n    },\n\n    toggleTheme() {\n      this.isDark = !this.isDark;\n      this.applyTheme();\n      localStorage.setItem('darkTheme', JSON.stringify(this.isDark));\n    },\n\n    applyTheme() {\n      if (this.isDark) {\n        document.documentElement.classList.add('dark');\n      } else {\n        document.documentElement.classList.remove('dark');\n      }\n    },\n\n    showNotification(message, type = 'info') {\n      // Simple notification - you could use a proper notification library here\n      const styles = {\n        success: 'bg-green-500 text-white',\n        error: 'bg-red-500 text-white',\n        info: 'bg-blue-500 text-white'\n      };\n      \n      // Create notification element\n      const notification = document.createElement('div');\n      notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg shadow-lg transition-all duration-300 transform translate-x-0 ${styles[type]}`;\n      notification.textContent = message;\n      \n      document.body.appendChild(notification);\n      \n      // Remove after 3 seconds\n      setTimeout(() => {\n        notification.style.transform = 'translateX(100%)';\n        setTimeout(() => {\n          if (notification.parentNode) {\n            notification.parentNode.removeChild(notification);\n          }\n        }, 300);\n      }, 3000);\n    }\n  },\n  beforeUnmount() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};\n</script>\n\n<style>\n@import url('https://cdnjs.cloudflare.com/ajax/libs/inter-ui/3.19.3/inter.css');\n\n* {\n  font-family: 'Inter', sans-serif;\n}\n\n/* Smooth transitions for all interactive elements */\nbutton, input, select, textarea {\n  transition: all 0.2s ease-in-out;\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n  width: 6px;\n}\n\n::-webkit-scrollbar-track {\n  background: #f1f5f9;\n}\n\n.dark ::-webkit-scrollbar-track {\n  background: #374151;\n}\n\n::-webkit-scrollbar-thumb {\n  background: #cbd5e1;\n  border-radius: 3px;\n}\n\n.dark ::-webkit-scrollbar-thumb {\n  background: #4b5563;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: #94a3b8;\n}\n</style>"],"mappings":"AA2LA,SAASA,EAAC,QAAS,kBAAkB;AACrC,OAAOC,KAAI,MAAO,OAAO;AAEzB,MAAMC,OAAM,GAAI,2BAA2B;AAE3C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;QACTH,IAAI,EAAE,EAAE;QACRI,GAAG,EAAE;MACP,CAAC;MACDC,MAAM,EAAE,IAAI;MACZC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd;IACA,MAAMC,UAAS,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,IAAI,CAACJ,MAAK,GAAIE,UAAS,GAAIG,IAAI,CAACC,KAAK,CAACJ,UAAU,IAAI,KAAK;IACzD,IAAI,CAACK,UAAU,CAAC,CAAC;IAEjB,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC;IACzB,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMnB,KAAK,CAACoB,GAAG,CAAC,GAAGnB,OAAO,UAAU,CAAC;QACtD,IAAI,CAACG,OAAM,GAAIe,QAAQ,CAAChB,IAAI;MAC9B,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/C,IAAI,CAACE,gBAAgB,CAAC,+BAA+B,EAAE,OAAO,CAAC;MACjE;IACF,CAAC;IAED,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAACnB,SAAS,CAACH,IAAI,CAACuB,IAAI,CAAC,KAAK,CAAC,IAAI,CAACpB,SAAS,CAACC,GAAG,CAACmB,IAAI,CAAC,CAAC,EAAE;QAC7D,IAAI,CAACF,gBAAgB,CAAC,0BAA0B,EAAE,OAAO,CAAC;QAC1D;MACF;MAEA,IAAI;QACF,MAAMvB,KAAK,CAAC0B,IAAI,CAAC,GAAGzB,OAAO,UAAU,EAAE,IAAI,CAACI,SAAS,CAAC;QACtD,IAAI,CAACA,SAAQ,GAAI;UAAEH,IAAI,EAAE,EAAE;UAAEI,GAAG,EAAE;QAAG,CAAC;QACtC,IAAI,CAACiB,gBAAgB,CAAC,qCAAqC,EAAE,SAAS,CAAC;MACzE,EAAE,OAAOF,KAAK,EAAE;QACd,MAAMM,OAAM,GAAIN,KAAK,CAACF,QAAQ,EAAEhB,IAAI,EAAEkB,KAAI,IAAK,2BAA2B;QAC1E,IAAI,CAACE,gBAAgB,CAACI,OAAO,EAAE,OAAO,CAAC;MACzC;IACF,CAAC;IAED,MAAMC,YAAYA,CAACC,QAAQ,EAAE;MAC3B,IAAI;QACF,MAAM7B,KAAK,CAAC8B,KAAK,CAAC,GAAG7B,OAAO,YAAY4B,QAAQ,SAAS,CAAC;QAC1D,IAAI,CAACN,gBAAgB,CAAC,8BAA8B,EAAE,SAAS,CAAC;MAClE,EAAE,OAAOF,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9C,IAAI,CAACE,gBAAgB,CAAC,wBAAwB,EAAE,OAAO,CAAC;MAC1D;IACF,CAAC;IAEDN,cAAcA,CAAA,EAAG;MACf,IAAI,CAACV,MAAK,GAAIR,EAAE,CAAC,uBAAuB,CAAC;MAEzC,IAAI,CAACQ,MAAM,CAACwB,EAAE,CAAC,SAAS,EAAE,MAAM;QAC9BT,OAAO,CAACU,GAAG,CAAC,qBAAqB,CAAC;MACpC,CAAC,CAAC;MAEF,IAAI,CAACzB,MAAM,CAACwB,EAAE,CAAC,gBAAgB,EAAGE,MAAM,IAAK;QAC3C,IAAI,CAAC7B,OAAO,CAAC8B,OAAO,CAACD,MAAM,CAAC;QAC5B,IAAI,CAACV,gBAAgB,CAAC,8BAA8B,EAAE,MAAM,CAAC;MAC/D,CAAC,CAAC;MAEF,IAAI,CAAChB,MAAM,CAACwB,EAAE,CAAC,eAAe,EAAGE,MAAM,IAAK;QAC1C,MAAME,KAAI,GAAI,IAAI,CAAC/B,OAAO,CAACgC,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAML,MAAM,CAACK,EAAE,CAAC;QAC7D,IAAIH,KAAI,KAAM,CAAC,CAAC,EAAE;UAChB,IAAI,CAAC/B,OAAO,CAACmC,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAEF,MAAM,CAAC;QACvC;MACF,CAAC,CAAC;IACJ,CAAC;IAEDO,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAChC,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;MAC1B,IAAI,CAACO,UAAU,CAAC,CAAC;MACjBJ,YAAY,CAAC8B,OAAO,CAAC,WAAW,EAAE5B,IAAI,CAAC6B,SAAS,CAAC,IAAI,CAAClC,MAAM,CAAC,CAAC;IAChE,CAAC;IAEDO,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACP,MAAM,EAAE;QACfmC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAChD,OAAO;QACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MACnD;IACF,CAAC;IAEDxB,gBAAgBA,CAACI,OAAO,EAAEqB,IAAG,GAAI,MAAM,EAAE;MACvC;MACA,MAAMC,MAAK,GAAI;QACbC,OAAO,EAAE,yBAAyB;QAClC7B,KAAK,EAAE,uBAAuB;QAC9B8B,IAAI,EAAE;MACR,CAAC;;MAED;MACA,MAAMC,YAAW,GAAIT,QAAQ,CAACU,aAAa,CAAC,KAAK,CAAC;MAClDD,YAAY,CAACE,SAAQ,GAAI,0GAA0GL,MAAM,CAACD,IAAI,CAAC,EAAE;MACjJI,YAAY,CAACG,WAAU,GAAI5B,OAAO;MAElCgB,QAAQ,CAACa,IAAI,CAACC,WAAW,CAACL,YAAY,CAAC;;MAEvC;MACAM,UAAU,CAAC,MAAM;QACfN,YAAY,CAACO,KAAK,CAACC,SAAQ,GAAI,kBAAkB;QACjDF,UAAU,CAAC,MAAM;UACf,IAAIN,YAAY,CAACS,UAAU,EAAE;YAC3BT,YAAY,CAACS,UAAU,CAACC,WAAW,CAACV,YAAY,CAAC;UACnD;QACF,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EACDW,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACxD,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACyD,UAAU,CAAC,CAAC;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}