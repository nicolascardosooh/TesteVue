{"ast":null,"code":"import { io } from 'socket.io-client';\nimport axios from 'axios';\nconst API_URL = 'http://localhost:3000/api';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      devices: [],\n      newDevice: {\n        name: '',\n        mac: ''\n      },\n      socket: null\n    };\n  },\n  async mounted() {\n    await this.fetchDevices();\n    this.setupWebSocket();\n  },\n  methods: {\n    async fetchDevices() {\n      try {\n        const response = await axios.get(`${API_URL}/devices`);\n        this.devices = response.data;\n      } catch (error) {\n        console.error('Error fetching devices:', error);\n      }\n    },\n    async createDevice() {\n      try {\n        await axios.post(`${API_URL}/devices`, this.newDevice);\n        this.newDevice = {\n          name: '',\n          mac: ''\n        };\n      } catch (error) {\n        alert(error.response?.data?.error || 'Erro ao criar dispositivo');\n      }\n    },\n    async toggleStatus(deviceId) {\n      try {\n        await axios.patch(`${API_URL}/devices/${deviceId}/status`);\n      } catch (error) {\n        console.error('Error toggling status:', error);\n      }\n    },\n    setupWebSocket() {\n      this.socket = io('http://localhost:3000');\n      this.socket.on('device:created', device => {\n        this.devices.unshift(device);\n      });\n      this.socket.on('device:status', device => {\n        const index = this.devices.findIndex(d => d.id === device.id);\n        if (index !== -1) {\n          this.devices.splice(index, 1, device);\n        }\n      });\n    }\n  },\n  beforeUnmount() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["io","axios","API_URL","name","data","devices","newDevice","mac","socket","mounted","fetchDevices","setupWebSocket","methods","response","get","error","console","createDevice","post","alert","toggleStatus","deviceId","patch","on","device","unshift","index","findIndex","d","id","splice","beforeUnmount","disconnect"],"sources":["C:\\Users\\nicolas\\Desktop\\Projetos\\Teste\\frontend\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Gerenciamento de Dispositivos</h1>\n    \n    <!-- Device Form -->\n    <div class=\"device-form\">\n      <h2>Cadastrar Dispositivo</h2>\n      <form @submit.prevent=\"createDevice\">\n        <input \n          v-model=\"newDevice.name\" \n          placeholder=\"Nome\" \n          required \n        />\n        <input \n          v-model=\"newDevice.mac\" \n          placeholder=\"MAC Address\" \n          required \n        />\n        <button type=\"submit\">Cadastrar</button>\n      </form>\n    </div>\n\n    <!-- Devices Table -->\n    <div class=\"devices-list\">\n      <h2>Dispositivos</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>Nome</th>\n            <th>MAC</th>\n            <th>Status</th>\n            <th>Ações</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"device in devices\" :key=\"device.id\">\n            <td>{{ device.id }}</td>\n            <td>{{ device.name }}</td>\n            <td>{{ device.mac }}</td>\n            <td :class=\"device.status.toLowerCase()\">\n              {{ device.status }}\n            </td>\n            <td>\n              <button \n                @click=\"toggleStatus(device.id)\"\n                :class=\"device.status === 'ATIVO' ? 'inactive' : 'active'\"\n              >\n                {{ device.status === 'ATIVO' ? 'Desativar' : 'Ativar' }}\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { io } from 'socket.io-client';\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:3000/api';\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      devices: [],\n      newDevice: {\n        name: '',\n        mac: ''\n      },\n      socket: null\n    };\n  },\n  async mounted() {\n    await this.fetchDevices();\n    this.setupWebSocket();\n  },\n  methods: {\n    async fetchDevices() {\n      try {\n        const response = await axios.get(`${API_URL}/devices`);\n        this.devices = response.data;\n      } catch (error) {\n        console.error('Error fetching devices:', error);\n      }\n    },\n    \n    async createDevice() {\n      try {\n        await axios.post(`${API_URL}/devices`, this.newDevice);\n        this.newDevice = { name: '', mac: '' };\n      } catch (error) {\n        alert(error.response?.data?.error || 'Erro ao criar dispositivo');\n      }\n    },\n    \n    async toggleStatus(deviceId) {\n      try {\n        await axios.patch(`${API_URL}/devices/${deviceId}/status`);\n      } catch (error) {\n        console.error('Error toggling status:', error);\n      }\n    },\n    \n    setupWebSocket() {\n      this.socket = io('http://localhost:3000');\n      \n      this.socket.on('device:created', (device) => {\n        this.devices.unshift(device);\n      });\n      \n      this.socket.on('device:status', (device) => {\n        const index = this.devices.findIndex(d => d.id === device.id);\n        if (index !== -1) {\n          this.devices.splice(index, 1, device);\n        }\n      });\n    }\n  },\n  beforeUnmount() {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n};\n</script>\n\n<style>\n.ativo { color: green; font-weight: bold; }\n.inativo { color: red; font-weight: bold; }\n\nbutton.active { background: green; color: white; }\nbutton.inactive { background: red; color: white; }\n\ntable { width: 100%; border-collapse: collapse; }\nth, td { padding: 10px; border: 1px solid #ddd; text-align: left; }\n\nform input { margin: 5px; padding: 8px; }\nform button { padding: 8px 15px; background: blue; color: white; border: none; }\n</style>"],"mappings":"AA2DA,SAASA,EAAC,QAAS,kBAAkB;AACrC,OAAOC,KAAI,MAAO,OAAO;AAEzB,MAAMC,OAAM,GAAI,2BAA2B;AAE3C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;QACTH,IAAI,EAAE,EAAE;QACRI,GAAG,EAAE;MACP,CAAC;MACDC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,YAAY,CAAC,CAAC;IACzB,IAAI,CAACC,cAAc,CAAC,CAAC;EACvB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMG,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,UAAU,CAAC;QACtD,IAAI,CAACG,OAAM,GAAIQ,QAAQ,CAACT,IAAI;MAC9B,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAED,MAAME,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMhB,KAAK,CAACiB,IAAI,CAAC,GAAGhB,OAAO,UAAU,EAAE,IAAI,CAACI,SAAS,CAAC;QACtD,IAAI,CAACA,SAAQ,GAAI;UAAEH,IAAI,EAAE,EAAE;UAAEI,GAAG,EAAE;QAAG,CAAC;MACxC,EAAE,OAAOQ,KAAK,EAAE;QACdI,KAAK,CAACJ,KAAK,CAACF,QAAQ,EAAET,IAAI,EAAEW,KAAI,IAAK,2BAA2B,CAAC;MACnE;IACF,CAAC;IAED,MAAMK,YAAYA,CAACC,QAAQ,EAAE;MAC3B,IAAI;QACF,MAAMpB,KAAK,CAACqB,KAAK,CAAC,GAAGpB,OAAO,YAAYmB,QAAQ,SAAS,CAAC;MAC5D,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDJ,cAAcA,CAAA,EAAG;MACf,IAAI,CAACH,MAAK,GAAIR,EAAE,CAAC,uBAAuB,CAAC;MAEzC,IAAI,CAACQ,MAAM,CAACe,EAAE,CAAC,gBAAgB,EAAGC,MAAM,IAAK;QAC3C,IAAI,CAACnB,OAAO,CAACoB,OAAO,CAACD,MAAM,CAAC;MAC9B,CAAC,CAAC;MAEF,IAAI,CAAChB,MAAM,CAACe,EAAE,CAAC,eAAe,EAAGC,MAAM,IAAK;QAC1C,MAAME,KAAI,GAAI,IAAI,CAACrB,OAAO,CAACsB,SAAS,CAACC,CAAA,IAAKA,CAAC,CAACC,EAAC,KAAML,MAAM,CAACK,EAAE,CAAC;QAC7D,IAAIH,KAAI,KAAM,CAAC,CAAC,EAAE;UAChB,IAAI,CAACrB,OAAO,CAACyB,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAEF,MAAM,CAAC;QACvC;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EACDO,aAAaA,CAAA,EAAG;IACd,IAAI,IAAI,CAACvB,MAAM,EAAE;MACf,IAAI,CAACA,MAAM,CAACwB,UAAU,CAAC,CAAC;IAC1B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}